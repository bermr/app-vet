package com.app;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.FontImage;
import com.codename1.ui.Form;
import com.codename1.ui.Image;
import com.codename1.ui.Button;
import com.codename1.ui.Component;
import com.codename1.ui.Container;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.components.SpanButton;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import com.codename1.ui.animations.CommonTransitions;

import java.io.IOException;

import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.messaging.Message;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class AppVet {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("app-vet");

        Toolbar tb = hi.getToolbar();
        Image icon = theme.getImage("icon.png"); 
        Container topBar = BorderLayout.east(new Label(icon));
        topBar.add(BorderLayout.SOUTH, new Label("Menu...", "SidemenuTagline")); 
        topBar.setUIID("SideCommand");
        tb.addComponentToSideMenu(topBar);

        tb.addMaterialCommandToSideMenu("Novidades", FontImage.MATERIAL_HOME, e -> {showNews(hi);}); 
        tb.addMaterialCommandToSideMenu("Meus Pets", FontImage.MATERIAL_WEB, e -> {showMyPets(hi);});
        tb.addMaterialCommandToSideMenu("Autorizações", FontImage.MATERIAL_NOTE, e -> {showAuth(hi);});
        tb.addMaterialCommandToSideMenu("Sobre", FontImage.MATERIAL_INFO, e -> {showAbout(hi);});

        hi.addComponent(new Label(""));
        hi.show();
    }

    private void showAbout(Form hi) {
    	hi.getContentPane().replace(hi.getContentPane().getComponentAt(0), createAbout(), CommonTransitions.createSlide(CommonTransitions.SLIDE_HORIZONTAL, false, 300));
	}

	private Component createAbout() {
		Container about = BorderLayout.center(new Label());
        
        Container ab = new Container(new BoxLayout(BoxLayout.Y_AXIS));
        about.addComponent(BorderLayout.CENTER, ab);
        
        ab.setScrollableY(true);
        
        Label l1 = new Label("Veterinaria X");
        Label l2 = new Label("3551-3551, Rua Tal, Lavras");
     
        ab.add(l1);
        ab.add(l2);
        
        return about;
	}

	private void showAuth(Form hi) {
		hi.getContentPane().replace(hi.getContentPane().getComponentAt(0), createAuth(), CommonTransitions.createSlide(CommonTransitions.SLIDE_HORIZONTAL, false, 300));
	}

	private Component createAuth() {
		Container auth = BorderLayout.center(new Label());
        
        Container au = new Container(new BoxLayout(BoxLayout.Y_AXIS));
        auth.addComponent(BorderLayout.CENTER, au);
        
        au.setScrollableY(true);
        
        Label l1 = new Label("Autoriza castrar o gato x?");
     
        au.add(l1);
        
        return auth;
	}

	private void showNews(Form hi) {
		hi.getContentPane().replace(hi.getContentPane().getComponentAt(0), createNews(), CommonTransitions.createSlide(CommonTransitions.SLIDE_HORIZONTAL, false, 300));
	}

	private Component createNews() {
		Container news = BorderLayout.center(new Label());
		Container n = new Container(new BoxLayout(BoxLayout.Y_AXIS));
        news.addComponent(BorderLayout.CENTER, n);
        Label l1 = new Label("TOSA GRÁTIS DIA 21!!!!!!");
        
        n.add(l1);
        
		return news;
	}

	private void showMyPets(Form hi) {
    	hi.getContentPane().replace(hi.getContentPane().getComponentAt(0), createMyPets(), CommonTransitions.createSlide(CommonTransitions.SLIDE_HORIZONTAL, false, 300));
	}
    
    private Container createMyPets() {
        Container myPets = BorderLayout.center(new Label());
        
        Container mp = new Container(new BoxLayout(BoxLayout.Y_AXIS));
        myPets.addComponent(BorderLayout.CENTER, mp);
        
        mp.setScrollableY(true);
        
        Label l1 = new Label("Cachorro 1");
        Label l2 = new Label("Cachorro 2");
     
        mp.add(l1);
        mp.add(l2);
        
        return myPets;
}
    
    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
